Pandoc (Meta {unMeta = fromList []})
 [Para [Str "Quick/practical", Space, Str "references", Space, Str "for", Space, Str "common", Space, Str "tasks"]
 ,Div ("toc", [], []) [Para [Str "", Link ("", [], []) [Str "Coding"] ("#header-n3",""),LineBreak,Str "\t", Link ("", [], []) [Str "Bash"] ("#header-n4",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "quick", Space, Str "and", Space, Str "dirty"] ("#header-n5",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "getopts"] ("#header-n7",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Basic", Space, Str "loop", Space, Str "syntax"] ("#header-n14",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "String", Space, Str "trimming"] ("#header-n21",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Prepend/append", Space, Str "to", Space, Str "arrays"] ("#header-n29",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Default", Space, Str "variable", Space, Str "values"] ("#header-n31",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Named", Space, Str "arrays"] ("#header-n36",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Redirection", Space, Str "of", Space, Str "multiple", Space, Str "input", Space, Str "streams"] ("#header-n40",""),LineBreak,Str "\t", Link ("", [], []) [Str "Python"] ("#header-n44",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "sys.argv"] ("#header-n45",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Comman", Space, Str "line", Space, Str "parsing:", Space, Str "argparse"] ("#header-n47",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Matplotlib"] ("#header-n51",""),LineBreak,Str "\t", Link ("", [], []) [Str "R"] ("#header-n57",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Read", Space, Str "file", Space, Str "into", Space, Str "array"] ("#header-n58",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Write", Space, Str "array", Space] ("#header-n60",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "quick", Space, Str "and", Space, Str "dirty", Space] ("#header-n62",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "argparser", Space, Str "library"] ("#header-n64",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Install", Space, Str "package", Space, Str "locally"] ("#header-n66",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Installing", Space, Str "multiple", Space, Str "version", Space, Str "on", Space, Str "same", Space, Str "machine"] ("#header-n76",""),LineBreak,Str "\t", Link ("", [], []) [Str "AWK"] ("#header-n81",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "If/else"] ("#header-n82",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "passing", Space, Str "external", Space, Str "variables"] ("#header-n84",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "printf"] ("#header-n86",""),LineBreak,Str "", Link ("", [], []) [Str "Biocluster", Space, Str "/", Space, Str "SLURM"] ("#header-n89",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Setup", Space, Str "local", Space, Str "install", Space, Str "directory", Space, Str "and", Space, Code ("", [], []) "pip install --user <packageName>"] ("#header-n90",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Code ("", [], []) "sbatch", Space, Str "-", Space, Str "basic", Space] ("#header-n109",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Code ("", [], []) "sbatch", Space, Str "-", Space, Str "without", Space, Str "slurm", Space, Str "script"] ("#header-n114",""),LineBreak,Str "", Link ("", [], []) [Str "Jupyter", Space, Str "notebooks"] ("#header-n117",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Use", Space, Str "the", Space, Str "full", Space, Str "window"] ("#header-n118",""),LineBreak,Str "", Link ("", [], []) [Str "Git", Space, Str "and", Space, Str "githib"] ("#header-n127",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Push", Space, Str "to", Space, Str "remote", Space, Str "repository", Space, Str "(remote", Space, Str "repository", Space, Str "URL", Space, Str "already", Space, Str "set)"] ("#header-n128",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Check", Space, Str "if", Space, Str "local", Space, Str "repository", Space, Str "is", Space, Str "up-to-date"] ("#header-n139",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "Force", Space, Str "git", Space, Str "pull", Space, Str "to", Space, Str "overwrite", Space, Str "local", Space, Str "files"] ("#header-n144",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "References"] ("#header-n149",""),LineBreak,Str "", Link ("", [], []) [Str "Markdown"] ("#header-n153",""),LineBreak,Str "", Link ("", [], []) [Str "Misc"] ("#header-n160",""),LineBreak,Str "\t\t\t", Link ("", [], []) [Str "tar/untar", Space, Str "directory"] ("#header-n161","")]]
 ,Header 1 ("header-n3", [], []) [Str "Coding"]
 ,Header 2 ("header-n4", [], []) [Str "Bash"]
 ,Header 4 ("header-n5", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "quick", Space, Str "and", Space, Str "dirty"]
 ,CodeBlock ("",["shell"],[]) "#!/bin/bash\necho \"total number of arguments is ${#@}\"  ## does not include the script name\necho \"script name is $0\"\necho \"first argument is $1\"\necho \"second argument is $2\"\n#..."
 ,Header 4 ("header-n7", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "getopts"]
 ,BulletList [[Para [Str "https://wiki.bash-hackers.org/howto/getopts_tutorial"]],[Para [Str "Basic", Space, Str "example"],CodeBlock ("",["shell"],[]) "function test1 () {\n    function func_usage() { echo \"Usage: test1 -ac -b <parameter>\"; return 0 ; }\n\n    local OPTIND opt a b c  ## Only needed inside function\n    while getopts \"ab:c\" opt; do ## -a and -c are flags, -b is option with argument \n        case \"$opt\" in\n                a)\n                echo \"-a triggered\"\n                ;;\n                b)\n                echo \"setting local variable b\"\n                local b=$OPTARG  ##OPTARG stores the flag or unknown option\n                echo \"local b is $b\"\n                ;;\n                c)\n                echo \"-c triggered\"\n                ;;\n                \\?)   ## What is \\? ? this gets triggered with by undefined flag\n                func_usage\n                return 1\n                ;;\n                :)  ## this gets triggered by option missing its argument\n                func_usage\n                return 1\n                ;;\n        esac\n    done\n    return 0\n}"]]
 ,Header 4 ("header-n14", [], []) [Str "Basic", Space, Str "loop", Space, Str "syntax"]
 ,BulletList [[Para [Str "Looping", Space, Str "over", Space, Str "arrays"],CodeBlock ("",["shell"],[]) "arr1= (\"a\" \"b\" \"c\")\n## Method 1\nfor i in ${arr1[@]}\n\tdo\n\techo $i\ndone\n## Method 2 - advantage: can loop over multiple arrays with same index\nfor (( i=0; i<${#arr1[@]}; i++ ))  ## itialize, test, update \n        do\n        echo $i\ndone"],[Para [Str "While", Space, Str "loop:", Space, Str "TODO", Space, Str "write", Space, Str "this"]]]
 ,Header 4 ("header-n21", [], []) [Str "String", Space, Str "trimming"]
 ,BulletList [[Para [Str "Prefixes", Space, Str "and", Space, Str "suffixes"],CodeBlock ("",["shell"],[]) "x=prefix_xyxyx_suffix\necho ${x#prefix_} ## removes prefix ->xyxyx_suffix\necho ${x%_suffix}  ## remove suffix -> prefix_xyxyx"],[Para [Str "file", Space, Str "extensions", Space, Str "and", Space, Str "basenames"],CodeBlock ("",["shell"],[]) "fname=/path/to/myfile.ext\nfilename=$(basename $fname)  ## myfile.ext\nextension=\"${filename##*.}\" ## ext\nfilename=\"${filename%.*}\"  ## /path/to/myfile"]]
 ,Header 4 ("header-n29", [], []) [Str "Prepend/append", Space, Str "to", Space, Str "arrays"]
 ,CodeBlock ("",["shell"],[]) "array=( \"${array[@]/#/prefix_}\" )\narray=( \"${array[@]/%/_suffix}\" )"
 ,Header 4 ("header-n31", [], []) [Str "Default", Space, Str "variable", Space, Str "values"]
 ,BulletList [[Para [Str "https://unix.stackexchange.com/questions/122845/using-a-b-for-variable-assignment-in-scripts/122878"]]]
 ,CodeBlock ("",["shell"],[]) "a=\"${:-default}\"  ## if a undefined or empty string then set to default. Otherwise unchanged"
 ,Header 4 ("header-n36", [], []) [Str "Named", Space, Str "arrays"]
 ,BulletList [[Para [Str "TODO:", Space, Str "write", Space, Str "this"]]]
 ,Header 4 ("header-n40", [], []) [Str "Redirection", Space, Str "of", Space, Str "multiple", Space, Str "input", Space, Str "streams"]
 ,BulletList [[Para [Str "TODO:", Space, Str "write", Space, Str "this"]]]
 ,Header 2 ("header-n44", [], []) [Str "Python"]
 ,Header 4 ("header-n45", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "sys.argv"]
 ,CodeBlock ("",["python"],[]) "import sys\nprint( sys.argv[0])  ## script name (sys.argv is just a list)\nprint( sys.argv[1])  ## First string after script name\nprint(sys.argv[2])   ## Second string after script name"
 ,Header 4 ("header-n47", [], []) [Str "Comman", Space, Str "line", Space, Str "parsing:", Space, Str "argparse"]
 ,BulletList [[Para [Str "TODO:", Space, Str "basic", Space, Str "example"]]]
 ,Header 4 ("header-n51", [], []) [Str "Matplotlib"]
 ,BulletList [[Para [Str "setting", Space, Str "good", Space, Str "color", Space, Str "schemes:", Space, Str "TODO", Space, Str "write", Space, Str "this"]],[Para [Str "good", Space, Str "matplotlib.rc", Space, Str "file", Space, Str ":", Space, Str "TODO", Space, Str "add", Space, Str "this", Space, Str "as", Space, Str "a", Space, Str "separate", Space, Str "document"]]]
 ,Header 2 ("header-n57", [], []) [Str "R"]
 ,Header 4 ("header-n58", [], []) [Str "Read", Space, Str "file", Space, Str "into", Space, Str "array"]
 ,CodeBlock ("",["r"],[]) "arr <- scan(file , what = \"character\")"
 ,Header 4 ("header-n60", [], []) [Str "Write", Space, Str "array", Space]
 ,CodeBlock ("",["r"],[]) "write(myArr , file=\"myFname\", sep = \"\\n\")"
 ,Header 4 ("header-n62", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "quick", Space, Str "and", Space, Str "dirty", Space]
 ,CodeBlock ("",["r"],[]) "args = commandArgs(trailingOnly = TRUE ) ## args is a character vector\nprint(args[1]) ## arg1 when invoked as Rscript myScript.R arg1 arg2\nprint(args[2]) ## arg2 when invoked as Rscript myScript.R arg1 arg2\n#..."
 ,Header 4 ("header-n64", [], []) [Str "Command", Space, Str "line", Space, Str "parsing:", Space, Str "argparser", Space, Str "library"]
 ,CodeBlock ("",["r"],[]) "library(\"argparser\")\n####################################################\n#### PARSE\np <- arg_parser(description = \"My description\")\np <- add_argument(p, \"--param1\", default= \"optional\", type = \"default is 'string' another option is numeric\" , help = \"Must have help or will throw error\" )\np <- add_argument(p , \"--flag1\" , flag= TRUE, help = \"\" )  ## this is a flag\np <- add_argument(p , \"param2\" , help = \"\")\n# ...\nargv <- parse_args(p) ## this will parse from the trailing arguments to scrip at cmd line\n## For debug you might want to pass arguments inside an R session and not from cmd line:\n## To this using\n## argv <- parse_args(p, c(\"--param1\" , \"param1_value\", \"--flag1\" , \"--param2\" \"param2_value\"))\n\n########################################################\n#### Using the argv oject\n## Accessing parameter arguments\nargv$param1 \n## Testing flags\nif (args$flag1){\n    ## do something\n}\n## Testing if parameter is unspecified\nif ( is.na(argv$param2) ){\n    print(\"param2 value not specified\")\n}"
 ,Header 4 ("header-n66", [], []) [Str "Install", Space, Str "package", Space, Str "locally"]
 ,OrderedList (1,Decimal,Period) [[Para [Str "Download", Space, Str "the", Space, Str ".tar.gz", Space, Str "file", Space, Str "for", Space, Str "package", Space, Str "from", Space, Str "https://cran.r-project.org/"]],[Para [Str "Run", Space, Str "command:"],CodeBlock ("",["shell"],[]) "R CMD INSTALL -l <My/local/lib> <pkgName>.tar.gz"],[Para [Str "To", Space, Str "import", Space, Str "library", Space, Str "into", Space, Str "R", Space, Str "script", Space, Str "use"],CodeBlock ("",["r"],[]) "library(\"<pkgName>\" , lib.loc=\"<My/local/lib>\")"]]
 ,Header 4 ("header-n76", [], []) [Str "Installing", Space, Str "multiple", Space, Str "version", Space, Str "on", Space, Str "same", Space, Str "machine"]
 ,BulletList [[Para [Str "https://irvingduran.com/2016/10/installing-multiple-version-of-r-on-the-same-machine-for-macos-mac/"]]]
 ,Para [Str ""]
 ,Header 2 ("header-n81", [], []) [Str "AWK"]
 ,Header 4 ("header-n82", [], []) [Str "If/else"]
 ,CodeBlock ("",["shell"],[]) "awk -F '{ if ( <condition> ) {<action1>; <action2> } else { <action> } }' <f_in>"
 ,Header 4 ("header-n84", [], []) [Str "passing", Space, Str "external", Space, Str "variables"]
 ,CodeBlock ("",["shell"],[]) "var1=2\nvar2=4\nawk -v x=$var1 -v y=$var2 '$2 == x {print y \" \" $1}' <f_in>"
 ,Header 4 ("header-n86", [], []) [Str "printf"]
 ,CodeBlock ("",["shell"],[]) "awk '{printf \"%s\\t%s\\t%s\\n\" , $1 , $2 , $3}'"
 ,Para [Str ""]
 ,Header 1 ("header-n89", [], []) [Str "Biocluster", Space, Str "/", Space, Str "SLURM"]
 ,Header 4 ("header-n90", [], []) [Str "Setup", Space, Str "local", Space, Str "install", Space, Str "directory", Space, Str "and", Space, Code ("", [], []) "pip install --user <packageName>"]
 ,BulletList [[Para [Str "Setup", Space, Str "(Only", Space, Str "need", Space, Str "to", Space, Str "do", Space, Str "this", Space, Str "once)", Space],OrderedList (1,Decimal,Period) [[Para [Str "Create", Space, Str "a", Space, Code ("", [], []) ".local", Space, Str "directory", Space, Str "for", Space, Str "user-specific", Space, Str "python", Space, Str "packages:", Space],CodeBlock ("",["shell"],[]) "mkdir /home/my/prefered/dir/.local"],[Para [Str "Set", Space, Code ("", [], []) "PYTHONUSERBASE", Space, Str "environmental", Space, Str "variable", Space, Str "by", Space, Str "adding", Space, Str "the", Space, Str "following", Space, Str "line", Space, Str "to", Space, Str "your", Space, Str ".bashrc", Space, Str ":"],CodeBlock ("",["shell"],[]) "export PYTHONUSERBASE=\"/home/my/prefered/dir/.local\"",Para [Str "then,"],CodeBlock ("",["shell"],[]) "source ~/.bashrc "]]],[Para [Str "Installing", Space, Str "your", Space, Str "packages"],BulletList [[Para [Str "With", Space, Str "your", Space, Str "preferred", Space, Str "version", Space, Str "of", Space, Str "python", Space, Str "loaded", Space, Str "run"],CodeBlock ("",["shell"],[]) "pip install --user <MyPackageName>"]]]]
 ,Header 4 ("header-n109", [], []) [Code ("", [], []) "sbatch", Space, Str "-", Space, Str "basic", Space]
 ,CodeBlock ("",["shell"],[]) "sbatch -p <queue> --cpus-per-task=1 --mem=12GB -D <workDir> --job-name=<jobName>  -o \"oe/<jobName>.o\" -e \"oe/<jobName>.e\" --export=var1=$var1,var2=$var2... PATH/TO/SCRIPT/example.slurm"
 ,BulletList [[Para [Code ("", [], []) "var1", Space, Str "and", Space, Code ("", [], []) "var2", Space, Str "are", Space, Str "passed", Space, Str "to", Space, Str "example.slurm"]]]
 ,Header 4 ("header-n114", [], []) [Code ("", [], []) "sbatch", Space, Str "-", Space, Str "without", Space, Str "slurm", Space, Str "script"]
 ,CodeBlock ("",["shell"],[]) "sbatch -p <queue> --cpus-per-task=1 --mem=12GB -D <workDir> --job-name=<jobName>  -o \"oe/<jobName>.o\" -e \"oe/<jobName>.e\" <<EOF\n#!/bin/bash  \nscript_line1 ##lines will be submitted by slurm just like they were in a script\nscript_line2\n...\nEOF"
 ,Para [Str ""]
 ,Header 1 ("header-n117", [], []) [Str "Jupyter", Space, Str "notebooks"]
 ,Header 4 ("header-n118", [], []) [Str "Use", Space, Str "the", Space, Str "full", Space, Str "window"]
 ,BulletList [[Para [Str "Execute", Space, Str "the", Space, Str "following", Space, Str "line", Space, Str "in", Space, Str "a", Space, Str "cell"],CodeBlock ("",["python"],[]) "from IPython.core.display import display, HTML\ndisplay(HTML(\"<style>.container { width:100% !important; }</style>\"))"],[Para [Str "Or,", Space, Str "add", Space, Str "the", Space, Str "following", Space, Str "line", Space, Str "to", Space, Str "the", Space, Str "file", Space, Code ("", [], []) "~./jupyter/custom/custom.css", Str ":"],CodeBlock ("",["css"],[]) ".container { width:100%: !important; }",Para [Str ""]]]
 ,Header 1 ("header-n127", [], []) [Str "Git", Space, Str "and", Space, Str "githib"]
 ,Header 4 ("header-n128", [], []) [Str "Push", Space, Str "to", Space, Str "remote", Space, Str "repository", Space, Str "(remote", Space, Str "repository", Space, Str "URL", Space, Str "already", Space, Str "set)"]
 ,OrderedList (1,Decimal,Period) [[Para [Str "Stage", Space, Str "(adds", Space, Str "files", Space, Str "in", Space, Str "local", Space, Str "repository", Space, Str "to", Space, Str "set", Space, Str "of", Space, Str "staged", Space, Str "files)"],CodeBlock ("",["shell"],[]) "git add .   ## To unstage a file use:  git reset HEAD <YOUR-FILE>"],[Para [Str "Commit"],CodeBlock ("",["shell"],[]) "git commit -m <commit message>"],[Para [Str "Push"],CodeBlock ("",["shell"],[]) " git push -u origin master"]]
 ,Header 4 ("header-n139", [], []) [Str "Check", Space, Str "if", Space, Str "local", Space, Str "repository", Space, Str "is", Space, Str "up-to-date"]
 ,BulletList [[Para [Str "https://stackoverflow.com/questions/7938723/git-how-to-check-if-a-local-repo-is-up-to-date)"]]]
 ,CodeBlock ("",["shell"],[]) "git remote show origin \n# Returns something like:\n#HEAD branch: master\n#  Remote branch:\n#    master tracked\n#  Local branch configured for 'git pull':\n#    master merges with remote master\n#  Local ref configured for 'git push':\n#    master pushes to master (local out of date)  ##<-------"
 ,Header 4 ("header-n144", [], []) [Str "Force", Space, Str "git", Space, Str "pull", Space, Str "to", Space, Str "overwrite", Space, Str "local", Space, Str "files"]
 ,BulletList [[Para [Str "https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files"],CodeBlock ("",["shell"],[]) "git fetch --all\ngit reset --hard origin/<branchName>  ## branchName is probably master"]]
 ,Header 4 ("header-n149", [], []) [Str "References"]
 ,BulletList [[Para [Str "TODO:", Space, Str "add", Space, Str "some", Space, Str "good", Space, Str "ones", Space, Str "(concise)"]]]
 ,Header 1 ("header-n153", [], []) [Str "Markdown"]
 ,Para [Str "Markdown", Space, Str "is", Space, Str "a", Space, Str "simple", Space, Str "language", Space, Str "that", Space, Str "lets", Space, Str "you", Space, Str "write", Space, Str "text,", Space, Str "tables,", Space, Str "code", Space, Str "blocks", Space, Str "(syntax", Space, Str "highlighting),", Space, Str "math", Space, Str "(latex", Space, Str "syntax)", Space, Str "and", Space, Str "more.", Space, Str "Markdown", Space, Str "files", Space, Str "have", Space, Str ".md", Space, Str "extension"]
 ,BulletList [[Para [Str "A", Space, Str "good", Space, Str "code", Space, Str "editor", Space, Str "for", Space, Str "markdown", Space, Str "is", Space, Str "Typora", Space, Str "(https://typora.io/)"]],[Para [Str "A", Space, Str "good", Space, Str "reference", Space, Str "for", Space, Str "the", Space, Str "markdown", Space, Str "language", Space, Str "is", Space, Str "https://support.typora.io/Markdown-Reference/"]]]
 ,Header 1 ("header-n160", [], []) [Str "Misc"]
 ,Header 4 ("header-n161", [], []) [Str "tar/untar", Space, Str "directory"]
 ,BulletList [[Para [Str "Tar"],Para [Space, Code ("", [], []) "tar -zcvf archive-name.tar.gz directory-name"],BulletList [[Para [Str "see", Space, Str "https://www.cyberciti.biz/faq/how-do-i-compress-a-whole-linux-or-unix-directory/"]]]],[Para [Str "Untar"],BulletList [[Para [Str "TODO:", Space, Str "add", Space, Str "example"]]]]]
 ,Para [Str ""]
 ,Para [Str ""]]